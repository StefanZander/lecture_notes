{
    "docs": [
        {
            "location": "/vorbemerkung/", 
            "text": "Fernbedienung fu\u0308r einen \u201eFernseher\u201c\n\n\nAufgabenstellung zum Praktikum \"Nutzerzentrierte Softwareentwicklung\" (Version 2.7)\n\n\n\n\nNote\n\n\nVorbemerkung:\n Das Thema \"Fernsehgera\u0308t\" wurde nur deshalb fu\u0308r das Praktikum gewa\u0308hlt, weil Sie dadurch einen leichten Zugang zur Anwendungsdoma\u0308ne und zu potentiellen Benutzern haben. Die hier praktizierten Methoden sind aber nicht auf Consumer-Anwendungen beschra\u0308nkt, sondern passen ebenso fu\u0308r \"Datenverarbeitung\".\n\n\n\n\nEntwerfen Sie eine nutzerzentrierte und anwendungsfallorientierte Fernbedienung fu\u0308r einen \"Fernseher\". Die Fernbedienung sollen Sie als \nAndroid-App\n fu\u0308r ein Smartphone realisieren. Der \"Fernseher\" ist vorgegeben und wird im Praktikum simuliert durch eine gegebene \nJava-Anwendung\n auf dem PC, welche umschaltbare Standbilder anstelle laufender Fernsehprogramme zeigt.\n\n\nDer \"Fernseher\" hat die \ntechnischen\n (Vorsicht: Falle!) \nFeatures\n\n\n\n\n16:9-Display, \n\n\nSenderauswahl, \n\n\nLautsta\u0308rkeregelung, \n\n\nAnpassung an verschiedene Bildseitenverha\u0308ltnisse (4:3, 16:9, CinemaScope 2,35:1), \n\n\nPicture in Picture (ein zweiter Sender wird verkleinert im Bild dargestellt), \n\n\nFestplattenrecorder mit TimeShift (zeitversetzte Wiedergabe wa\u0308hrend der Aufnahme, aber keine allgemeinen Recorder-Funktionen) und \n\n\nKanalscan fu\u0308r die Inbetriebnahme.\n\n\n\n\nDie Benutzungsoberfla\u0308che der Fernbedienung soll \nintuitiv\n und \nkomfortabel\n sein und eine hohe \nUsability\n aufweisen. Eine Bedienungsanleitung \nmuss\n vo\u0308llig u\u0308berflu\u0308ssig sein. Denken Sie auch an \nSeniorInnen\n als Benutzergruppe, nicht nur an Digital Natives (es geht um die App selbst; den Aufrufkontext \u201eHandy\u201c blenden wir fu\u0308r das Praktikum aus). Die Herausforderung der Aufgabe besteht in der \nBeschra\u0308nkung auf das Wesentliche\n - verfallen Sie nicht in Featuritis! Bauen Sie auch keine klassische Plastik-Fernbedienung mit all ihren Restriktionen nach, sondern nutzen Sie die Freiheitsgrade, die eine Smartphone App bietet.\n\n\nEin paar Anregungen zur \nAnwendungsfallorientierung\n (ohne Anspruch auf Vollsta\u0308ndigkeit):\n\n\n\n\nErste Inbetriebnahme\n\n\nSenderauswahl nach Programmzeitschrift / Zappen / Werbepause u\u0308berbru\u0308cken\n\n\nSpannende Sendung - Telefon klingelt\n\n\n\n\n\n\nWarning\n\n\nHinweis:\n Der Fernseher ist nur ein \nSimulator\n, er speichert \nkeinerlei\n Daten oder Zust\u00e4nde \n diese m\u00fcssen Sie im \nDatenmodell\n Ihrer App selbst verwalten.", 
            "title": "Vorbemerkung"
        }, 
        {
            "location": "/vorbemerkung/#fernbedienung-fur-einen-fernseher", 
            "text": "Aufgabenstellung zum Praktikum \"Nutzerzentrierte Softwareentwicklung\" (Version 2.7)   Note  Vorbemerkung:  Das Thema \"Fernsehgera\u0308t\" wurde nur deshalb fu\u0308r das Praktikum gewa\u0308hlt, weil Sie dadurch einen leichten Zugang zur Anwendungsdoma\u0308ne und zu potentiellen Benutzern haben. Die hier praktizierten Methoden sind aber nicht auf Consumer-Anwendungen beschra\u0308nkt, sondern passen ebenso fu\u0308r \"Datenverarbeitung\".   Entwerfen Sie eine nutzerzentrierte und anwendungsfallorientierte Fernbedienung fu\u0308r einen \"Fernseher\". Die Fernbedienung sollen Sie als  Android-App  fu\u0308r ein Smartphone realisieren. Der \"Fernseher\" ist vorgegeben und wird im Praktikum simuliert durch eine gegebene  Java-Anwendung  auf dem PC, welche umschaltbare Standbilder anstelle laufender Fernsehprogramme zeigt.  Der \"Fernseher\" hat die  technischen  (Vorsicht: Falle!)  Features   16:9-Display,   Senderauswahl,   Lautsta\u0308rkeregelung,   Anpassung an verschiedene Bildseitenverha\u0308ltnisse (4:3, 16:9, CinemaScope 2,35:1),   Picture in Picture (ein zweiter Sender wird verkleinert im Bild dargestellt),   Festplattenrecorder mit TimeShift (zeitversetzte Wiedergabe wa\u0308hrend der Aufnahme, aber keine allgemeinen Recorder-Funktionen) und   Kanalscan fu\u0308r die Inbetriebnahme.   Die Benutzungsoberfla\u0308che der Fernbedienung soll  intuitiv  und  komfortabel  sein und eine hohe  Usability  aufweisen. Eine Bedienungsanleitung  muss  vo\u0308llig u\u0308berflu\u0308ssig sein. Denken Sie auch an  SeniorInnen  als Benutzergruppe, nicht nur an Digital Natives (es geht um die App selbst; den Aufrufkontext \u201eHandy\u201c blenden wir fu\u0308r das Praktikum aus). Die Herausforderung der Aufgabe besteht in der  Beschra\u0308nkung auf das Wesentliche  - verfallen Sie nicht in Featuritis! Bauen Sie auch keine klassische Plastik-Fernbedienung mit all ihren Restriktionen nach, sondern nutzen Sie die Freiheitsgrade, die eine Smartphone App bietet.  Ein paar Anregungen zur  Anwendungsfallorientierung  (ohne Anspruch auf Vollsta\u0308ndigkeit):   Erste Inbetriebnahme  Senderauswahl nach Programmzeitschrift / Zappen / Werbepause u\u0308berbru\u0308cken  Spannende Sendung - Telefon klingelt    Warning  Hinweis:  Der Fernseher ist nur ein  Simulator , er speichert  keinerlei  Daten oder Zust\u00e4nde   diese m\u00fcssen Sie im  Datenmodell  Ihrer App selbst verwalten.", 
            "title": "Fernbedienung fu\u0308r einen \u201eFernseher\u201c"
        }, 
        {
            "location": "/projektmappe/", 
            "text": "Warning\n\n\nHinweis:\n Sie mu\u0308ssen die Projektmappe bei \njedem Praktikumstermin\n dabei haben!\n\n\n\n\nSammeln Sie \nprojektbegleitend\n alle Dokumente, die in den nachfolgend beschriebenen Teilaufgaben verlangt werden, in einer \nProjektmappe\n (bevorzugt in Papierform). Die Projektmappe legen Sie dem Betreuer bei \njedem Praktikumstermin\n mit den \nErgebnissen des vorigen Termins\n vor. Insbesondere dient sie Ihnen selbst aber als Arbeitsunterlage und Referenz fu\u0308r die na\u0308chsten Schritte. \n\n\nFormale Anforderungen\n an die Projektmappe:\n\n\n\n\nSchnellhefter oder a\u0308hnliches, keine fliegenden Bla\u0308tter (bei Papierform)\n\n\nDeckblatt mit Namen\n\n\ndie einzelnen Dokumente sind sortiert entsprechend der Reihenfolge der Teilaufgaben\n\n\nalle Dokumente repra\u0308sentieren den aktuellen Stand, veraltete Versionen werden aussortiert\n\n\ndie Diagramme gerne als Handskizzen; halten Sie sich nicht mit irgendwelchen Tools auf\n\n\nTexte bitte mit irgendeiner Textverarbeitung getippt und ausgedruckt\n\n\n\n\n\n\nNote\n\n\nTipp:\n Vergewissern Sie sich anhand des \nSkripts\n, was mit den geforderten Diagrammen und Dokumenten gemeint ist. Diese Diagramme und Dokumente zu verstehen ist eines der Lernziele der Veranstaltung und pru\u0308fungsrelevant!", 
            "title": "Projektmappe"
        }, 
        {
            "location": "/termin1/", 
            "text": "Kennen lernen von Java, Android und Android Studio (\n zu Hause)\n\n\n\n\nAbstract\n\n\nLernziele\n\n\n\n\n Sie ko\u0308nnen einfache Android Projekte mit Android Studio anlegen\n\n\n Sie verstehen die Grundstruktur einer Android App\n\n\n Sie kennen den Lebenszyklus von Activities\n\n\n Sie kennen die wichtigsten Hilfsmittel in Android Studio\n\n\n Sie verstehen die Konzepte \u201eDatenmodell\u201c und \u201ePersistenz\u201c im Kontext einer GUI-Anwendung\n\n\n\n\n\n\n\n\nNote\n\n\nHinweis #1:\n Wenn Sie zum Testen und Debuggen Ihr eigenes Handy verwenden wollen, bringen Sie bitte ein passendes USB-Kabel mit. Im Normalfall ist das Kabel des Ladegera\u0308ts dazu geeignet. Verbinden Sie das Handy via USB-Kabel mit dem Entwicklungs-PC (Ihr Notebook oder der Labor-PC), schalten Sie das Handy ein, aktivieren Sie Entwickleroptionen und darin USB-Debugging.\n\n\n\n\n\n\nNote\n\n\nHinweis #2:\n Sie ko\u0308nnen Android Studio und den Emulator auch auf Ihrem eigenen Laptop installieren, siehe \n\n\n\n\nhttp://developer.android.com/sdk/index.html\n\n\nhttp://developer.android.com/sdk/installing/adding-packages.html\n\n\n\n\nKonfigurieren Sie den Emulator hinsichtlich der Displaygro\u0308\u00dfe eher zuru\u0308ckhaltend \u2013 er ist ein Ressourcenfresser!\n\n\n\n\nAufgaben\n\n\nGenerieren einer Applikation\n\n\nLegen Sie ein neues Projekt an mit einer \nBasic Activity\n oder \nEmpty Activity\n (d.h. abgeleitet von \nAppCompatActivity\n). Eine Hilfe zum Einstieg finden Sie im Skript in der Datei \nNZSE_4_AndroidStudio.pdf\n im Moodle-Kurs zur LVA. Machen Sie sich mit den verschiedenen Ansichten von Android Studio vertraut.\n\n\nU\u0308bersetzen und Testen\n\n\n\n\nMenu\u0308 \nBuild\n \n \nMake Project\n \n\n\nMenu\u0308 \nRun\n \n \nRun app\n\n\n\n\nEventuelle Fehlermeldungen finden Sie im Fenster \n0\n:\n \nMessages\n, Laufzeitfehler und Log im Fenster \n6\n:\n \nAndroid\n\n\nErforschen Sie das Hilfesystem\n\n\n\n\nHilfe zur Entwicklungsumgebung Hilfe zur API \n \nF1\n\n\nHilfe zur API \n rechter Mausklick auf Klassen- oder Methodenname \n \nSearch with Google\n\n\n\n\nDebuggen\n\n\nSetzen Sie ein paar \nHaltepunkte\n (Mausklick auf linken Rand im Java Editor). Menu\u0308 \nRun\n \n \nDebug app\n. Lassen Sie das Programm von Haltepunkt zu Haltepunkt laufen; nutzen Sie auch den Einzelschrittmodus. Schauen Sie in Variable hinein.\n\n\nJava verstehen\n\n\nSchauen Sie sich den \ngenerierten Java-Code\n genau an und kommentieren Sie jede halbwegs interessante Zeile. Schauen Sie sich die im Quellcode \nreferenzierten Ressourcen\n im XML-Editor an.\n\n\nWas hat es mit der Klasse \nR\n auf sich? Suchen Sie die Datei \nR.java\n im Windows Explorer / Finder / etc.\n\n\nLebenszyklus der Activity\n\n\nFu\u0308gen Sie einen parameterlosen Konstruktor zur Activity hinzu. U\u0308berschreiben Sie die Methoden \nonPause\n, \nonStop\n, \nonResume\n und \nonSaveInstanceState\n: rechter Mausklick im Quellcode der Activity \n \nGenerate\n \n \nOverride Methods\n \n \n...\n\n\nFu\u0308gen Sie in jeder dieser Methoden und in \nonCreate\n eine Testausgabe ein:\n\n\n1\n    \nLog\n.\ni\n \n(\nAppName\n,\n \nMethodenName\n);\n\n\n\n\n\n\n\nSpielen Sie folgende Testfa\u0308lle durch und beobachten Sie dabei die Testausgaben im Fenster \n6\n:\n \nAndroid\n (Sie ko\u0308nnen die Testausgaben filtern mit \nLog Level = Info\n und Ihrem AppName):\n\n\n\n\nApp aufrufen\n\n\nHome Screen aufrufen\n\n\nApp aufrufen\n\n\nApp beenden mittels Zuru\u0308ck-Button\n\n\nApp aufrufen\n\n\nHandy drehen (Hochformat / Querformat; im Emulator mit \nCtrl\n+\nF11\n simulieren)\n\n\n\n\nUntersuchen Sie mit dem Debugger und mit den Testausgaben folgende Fragen:\n\n\n\n\nWann und in welcher Reihenfolge werden die Methoden aufgerufen?\n\n\nWie lange lebt das Activity-Objekt?\n\n\n\n\nEreignisbehandlung\n\n\nSchreiben Sie eine Methode\n\n1\n    \npublic\n \nvoid\n \nonHelloWorldClick\n \n(\nView\n \nv\n)\n\n\n\n\n\nmit einer \nLog.i\n-Testausgabe und ordnen Sie die Methode dem \nonClick\n-Ereignis der TextView \nHello World\n zu. Testen Sie durch Antippen des Textes \nHello World\n.\n\n\nDatenmodell der Fernbedienung (optional)\n\n\nAlle relevanten \nDaten\n und \nZusta\u0308nde\n sollen in der Fernbedienung verwaltet werden; der Fernseher ist quasi ein reines Display. U\u0308berlegen Sie, welche Daten und Zusta\u0308nde innerhalb der Fernbedienung \npersistent gespeichert\n werden sollen und welche nur \nflu\u0308chtig\n?\n\n\n\n\nNote\n\n\nBedenken Sie:\n wa\u0308hrend einer Fernsehsendung macht man vielleicht noch andere Dinge mit dem Handy; eine andere Frage ist, welche Parameter beim Ausschalten des Fernsehers in Grundstellung gehen sollen. \n\n\n\n\nFassen Sie alle persistenten Daten in einer Klasse zusammen und zeichnen Sie das Klassendiagramm dieser persistenten Klasse (die Implementierung folgt in \nAufgabe 5\n).\n\n\n\n\nNote\n\n\nTipp:\n fu\u0308r das Ergebnis des Kanalscans empfiehlt sich eine \nArrayList\nChannel\n.\n\n\n\n\nErgebnisse\n\n\nDie folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:\n\n\n\n\nAbstract\n\n\nErgebnisse:\n\n\n\n\n Verst\u00e4ndnis, was es mit der Klasse \nR.java\n auf sich hat\n\n\n \u00dcberschriebene Methoden \nonPause\n, \nonStop\n, \nonResume\n, \nonCreate\n und \nonSaveInstanceState\n\n\n Dokumentierte Ausgabe der Testf\u00e4lle\n\n\n Klassendiagramm der zu persistierenden Daten", 
            "title": "Termin 1: Android Studio"
        }, 
        {
            "location": "/termin1/#kennen-lernen-von-java-android-und-android-studio-zu-hause", 
            "text": "Abstract  Lernziele    Sie ko\u0308nnen einfache Android Projekte mit Android Studio anlegen   Sie verstehen die Grundstruktur einer Android App   Sie kennen den Lebenszyklus von Activities   Sie kennen die wichtigsten Hilfsmittel in Android Studio   Sie verstehen die Konzepte \u201eDatenmodell\u201c und \u201ePersistenz\u201c im Kontext einer GUI-Anwendung     Note  Hinweis #1:  Wenn Sie zum Testen und Debuggen Ihr eigenes Handy verwenden wollen, bringen Sie bitte ein passendes USB-Kabel mit. Im Normalfall ist das Kabel des Ladegera\u0308ts dazu geeignet. Verbinden Sie das Handy via USB-Kabel mit dem Entwicklungs-PC (Ihr Notebook oder der Labor-PC), schalten Sie das Handy ein, aktivieren Sie Entwickleroptionen und darin USB-Debugging.    Note  Hinweis #2:  Sie ko\u0308nnen Android Studio und den Emulator auch auf Ihrem eigenen Laptop installieren, siehe    http://developer.android.com/sdk/index.html  http://developer.android.com/sdk/installing/adding-packages.html   Konfigurieren Sie den Emulator hinsichtlich der Displaygro\u0308\u00dfe eher zuru\u0308ckhaltend \u2013 er ist ein Ressourcenfresser!", 
            "title": "Kennen lernen von Java, Android und Android Studio (--&gt; zu Hause)"
        }, 
        {
            "location": "/termin1/#aufgaben", 
            "text": "", 
            "title": "Aufgaben"
        }, 
        {
            "location": "/termin1/#generieren-einer-applikation", 
            "text": "Legen Sie ein neues Projekt an mit einer  Basic Activity  oder  Empty Activity  (d.h. abgeleitet von  AppCompatActivity ). Eine Hilfe zum Einstieg finden Sie im Skript in der Datei  NZSE_4_AndroidStudio.pdf  im Moodle-Kurs zur LVA. Machen Sie sich mit den verschiedenen Ansichten von Android Studio vertraut.", 
            "title": "Generieren einer Applikation"
        }, 
        {
            "location": "/termin1/#ubersetzen-und-testen", 
            "text": "Menu\u0308  Build     Make Project    Menu\u0308  Run     Run app   Eventuelle Fehlermeldungen finden Sie im Fenster  0 :   Messages , Laufzeitfehler und Log im Fenster  6 :   Android", 
            "title": "U\u0308bersetzen und Testen"
        }, 
        {
            "location": "/termin1/#erforschen-sie-das-hilfesystem", 
            "text": "Hilfe zur Entwicklungsumgebung Hilfe zur API    F1  Hilfe zur API   rechter Mausklick auf Klassen- oder Methodenname    Search with Google", 
            "title": "Erforschen Sie das Hilfesystem"
        }, 
        {
            "location": "/termin1/#debuggen", 
            "text": "Setzen Sie ein paar  Haltepunkte  (Mausklick auf linken Rand im Java Editor). Menu\u0308  Run     Debug app . Lassen Sie das Programm von Haltepunkt zu Haltepunkt laufen; nutzen Sie auch den Einzelschrittmodus. Schauen Sie in Variable hinein.", 
            "title": "Debuggen"
        }, 
        {
            "location": "/termin1/#java-verstehen", 
            "text": "Schauen Sie sich den  generierten Java-Code  genau an und kommentieren Sie jede halbwegs interessante Zeile. Schauen Sie sich die im Quellcode  referenzierten Ressourcen  im XML-Editor an.  Was hat es mit der Klasse  R  auf sich? Suchen Sie die Datei  R.java  im Windows Explorer / Finder / etc.", 
            "title": "Java verstehen"
        }, 
        {
            "location": "/termin1/#lebenszyklus-der-activity", 
            "text": "Fu\u0308gen Sie einen parameterlosen Konstruktor zur Activity hinzu. U\u0308berschreiben Sie die Methoden  onPause ,  onStop ,  onResume  und  onSaveInstanceState : rechter Mausklick im Quellcode der Activity    Generate     Override Methods     ...  Fu\u0308gen Sie in jeder dieser Methoden und in  onCreate  eine Testausgabe ein:  1      Log . i   ( AppName ,   MethodenName );    Spielen Sie folgende Testfa\u0308lle durch und beobachten Sie dabei die Testausgaben im Fenster  6 :   Android  (Sie ko\u0308nnen die Testausgaben filtern mit  Log Level = Info  und Ihrem AppName):   App aufrufen  Home Screen aufrufen  App aufrufen  App beenden mittels Zuru\u0308ck-Button  App aufrufen  Handy drehen (Hochformat / Querformat; im Emulator mit  Ctrl + F11  simulieren)   Untersuchen Sie mit dem Debugger und mit den Testausgaben folgende Fragen:   Wann und in welcher Reihenfolge werden die Methoden aufgerufen?  Wie lange lebt das Activity-Objekt?", 
            "title": "Lebenszyklus der Activity"
        }, 
        {
            "location": "/termin1/#ereignisbehandlung", 
            "text": "Schreiben Sie eine Methode 1      public   void   onHelloWorldClick   ( View   v )   \nmit einer  Log.i -Testausgabe und ordnen Sie die Methode dem  onClick -Ereignis der TextView  Hello World  zu. Testen Sie durch Antippen des Textes  Hello World .", 
            "title": "Ereignisbehandlung"
        }, 
        {
            "location": "/termin1/#datenmodell-der-fernbedienung-optional", 
            "text": "Alle relevanten  Daten  und  Zusta\u0308nde  sollen in der Fernbedienung verwaltet werden; der Fernseher ist quasi ein reines Display. U\u0308berlegen Sie, welche Daten und Zusta\u0308nde innerhalb der Fernbedienung  persistent gespeichert  werden sollen und welche nur  flu\u0308chtig ?   Note  Bedenken Sie:  wa\u0308hrend einer Fernsehsendung macht man vielleicht noch andere Dinge mit dem Handy; eine andere Frage ist, welche Parameter beim Ausschalten des Fernsehers in Grundstellung gehen sollen.    Fassen Sie alle persistenten Daten in einer Klasse zusammen und zeichnen Sie das Klassendiagramm dieser persistenten Klasse (die Implementierung folgt in  Aufgabe 5 ).   Note  Tipp:  fu\u0308r das Ergebnis des Kanalscans empfiehlt sich eine  ArrayList Channel .", 
            "title": "Datenmodell der Fernbedienung (optional)"
        }, 
        {
            "location": "/termin1/#ergebnisse", 
            "text": "Die folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:   Abstract  Ergebnisse:    Verst\u00e4ndnis, was es mit der Klasse  R.java  auf sich hat   \u00dcberschriebene Methoden  onPause ,  onStop ,  onResume ,  onCreate  und  onSaveInstanceState   Dokumentierte Ausgabe der Testf\u00e4lle   Klassendiagramm der zu persistierenden Daten", 
            "title": "Ergebnisse"
        }, 
        {
            "location": "/termin2/", 
            "text": "User Research\n\n\n\n\nAbstract\n\n\nLernziele\n\n\n\n\n Die Sicht-, Denk- und Arbeitsweise verschiedener Benutzer kennen lernen und sich in sie hinein versetzen\n\n\n Finden und Verstehen der beim Benutzer in der Praxis auftretenden Anwendungsfa\u0308lle\n\n\n Unterscheidung von technischen Funktionen und benutzerorientierten Anwendungsszenarien\n\n\n\n\n\n\nAufgaben\n\n\nPersonas\n\n\n\n\n\n\nPersonen- und Kriterienliste\n: Erstellen Sie eine \nListe\n von verschiedenen typischen Personen, die als Benutzer des Fernsehers in Frage kommen (gerne aus dem Kreis Ihrer Verwandten und Bekannten).\n\n\n\n\nNach welchen Kriterien unterscheiden Sie die Personen? \n\n\nWelche Kriterien identifizieren Sie als relevant fu\u0308r die Klassifikation der Benutzer? \n\n\n\n\nFu\u0308gen Sie diese \nKriterien\n der Liste hinzu.\n\n\n\n\n\n\nStereotypbeschreibung\n:    Fertigen Sie fu\u0308r \neine\n dieser Personen eine anschaulische und lebendige \nStereotypbeschreibung\n mit fiktivem oder echtem Namen, Bild, Alter, Geschlecht, Ausbildung, Vorlieben, Hobbys, Charaktereigenschaften etc. Anhand dieser Stereotypbeschreibung und des darauf aufbauenden \nAnwendungsszenarios\n sollen Sie sich spa\u0308ter immer wieder vergewissern ko\u0308nnen, ob die entworfene Fernbedienung auch wirklich zu diesen Personen passt.\n\n\n\n\n\n\n\nInterview\n\n\n\n\n\n\nInterviewleitfaden\n: Erarbeiten Sie innerhalb ihres Teams einen \nInterviewleitfaden\n, d.h., \u00fcberlegen Sie sich, welche Fragen Sie im Rahmen des Interviews ihren Stakeholdern stellen, um mehr \u00fcber ihre Fernsehgewohnheiten, W\u00fcnsche und Erwartungen zu erfahren. Notieren Sie diese in Form eines \nteilstandardisierten Interviews\n. \n\n\nDas Interview dient als Grundlage der Erstellung von\n\n\n\n\n1 Anwendungsszenario\n\n\n(\noptional\n) je 1 funktionale und qualitative Anforderung (inkl. Quantifizierung)\n\n\n(\noptional\n) 1 Begeisterungsfaktor\n\n\n\n\n\n\nNote\n\n\nHinweis:\n Stellen Sie nicht irgendwelche Fragen; die Fragen sollen Ihnen helfen, die NutzerInnen und deren spezifische Bed\u00fcrfnisse, Lebensgewohnheiten und W\u00fcnsche besser zu verstehen. Die Antworten sind Basis f\u00fcr die Erarbeitung eines Anwendungsszenarios, sowie je einer funktionalen und qualitativen Anforderung (inkl. Quantifizierung) und einem Begeisterungsfaktor.\n\n\n\n\n\n\n\n\nAblauf und Aufgaben\n:\n\n\n\n\nGruppe 2 liest die \nStereotypbeschreibung\n aus Aufgabe 1 von Gruppe 1 und steigt in diese Rolle\n\n\nGruppe 1 bereit das \nteilstandardisierte Interview\n vor (\n \nsiehe Vorlesungsunterlagen\n)\n\n\n\n\nGruppe 1 \ninterviewed\n Gruppe 2 und notiert sich die wichtigsten Angaben inkl. Fragen (\n  \nBeantwortung am Ende\n); \n\n\n\n\nGruppe 1 legt vorab fest, wer in die Rolle des \nModerators\n tritt und wer \nprotokolliert\n (\n \nsie k\u00f6nnen nicht beides gleichzeitig tun!\n) \n\n\nNutzen Sie ggf. das Handy f\u00fcr Video-/Audioaufzeichnungen\n\n\n\n\n\n\n\n\nGruppe 1 \n 2 leiten aus den Angaben gemeinsam ein \nAnwendungsszenario\n ab; Gruppe 1 notiert dieses. \n\n\n\n\n(\noptional\n) Gruppe 1 leitet aus dem Anwendungszenario je \n1 funktionale + 1 qualitative Anforderung\n ab\n\n\n(\noptional\n) Gruppe 1 stimmt die \nQuantifizierbarkeit\n der qualitativen Anforderung mit Gruppe 2 ab\n\n\n(\noptional\n) Gruppe 1 erarbeitet mit Gruppe 2 \neinen Begeisterungsfaktor\n\n\ndann Wechsel der Rollen\n\n\n\n\n\n\nHinweise:\n\n\n\n\nNote\n\n\nAnwendungsszenario\n: Dieses soll \nlebensnah\n und \nanschaulich\n sein und sich nicht in Details verlieren. Beziehen Sie sich nicht auf Kno\u0308pfe und deren Beschriftung (die sind ja noch gar nicht erfunden), sondern bleiben Sie auf der Ebene des mentalen Modells (dabei kann die Ich-Form helfen).\n\n\n\n\n\n\nNote\n\n\nQualit\u00e4tskriterien:\n Achten Sie auf eine \nkorrekte Formulierung\n und u\u0308berpru\u0308fen Sie auch, ob alle \nQualita\u0308tskriterien\n hinreichend erfu\u0308llt werden. U\u0308berlegen Sie hierbei, wie die Einhaltung eines Qualita\u0308tskriteriums nachgewiesen werden kann. Verfeinern Sie die Anforderung falls ein Qualita\u0308tskriterium u\u0308berhaupt nicht eingehalten wird.\n\n\n\n\n\n\nNote\n\n\nFormulierung:\n In der Vorlesung haben Sie ein \nTool\n zur angemessen \nFormulierung von Anforderungen\n kennen gelernt; wie hei\u00dft dieses? \u00dcberlegen Sie auch, warum man dieses einsetzen sollte.\n\n\n\n\n\n\nNote\n\n\nQuantifizierung:\n U\u0308berpru\u0308fen Sie die Quantifizierbarkeit der beiden \nQualita\u0308tsanforderungen\n und stellen Sie entsprechende \nQuantifizierungsmerkmale\n auf (\nHinweis: hier k\u00f6nnen Sie sich an den Beispielen aus der Vorlesung bzw. aus dem Skriptum orientieren\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nErgebnisse\n\n\nDie folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:\n\n\n\n\nAbstract\n\n\nErgebnisse:\n\n\n\n\n je 1 Benutzer- und 1 Kriterienliste\n\n\n dokumentierter Interviewleitfaden inkl. Antworten\n\n\n 1 Stereotypbeschreibung\n\n\n 1 Anwendungsszenariobeschreibung\n\n\n (\noptional\n) je 1 funktionale und 1 qualitative Anforderung pro Szenario\n\n\n (\noptional\n) Quantifizierung der qualitativen Anforderungen\n\n\n (\noptional\n) je 1 Begeisterungsfaktor pro Szenario", 
            "title": "Termin 2: User Research"
        }, 
        {
            "location": "/termin2/#user-research", 
            "text": "Abstract  Lernziele    Die Sicht-, Denk- und Arbeitsweise verschiedener Benutzer kennen lernen und sich in sie hinein versetzen   Finden und Verstehen der beim Benutzer in der Praxis auftretenden Anwendungsfa\u0308lle   Unterscheidung von technischen Funktionen und benutzerorientierten Anwendungsszenarien", 
            "title": "User Research"
        }, 
        {
            "location": "/termin2/#aufgaben", 
            "text": "", 
            "title": "Aufgaben"
        }, 
        {
            "location": "/termin2/#personas", 
            "text": "Personen- und Kriterienliste : Erstellen Sie eine  Liste  von verschiedenen typischen Personen, die als Benutzer des Fernsehers in Frage kommen (gerne aus dem Kreis Ihrer Verwandten und Bekannten).   Nach welchen Kriterien unterscheiden Sie die Personen?   Welche Kriterien identifizieren Sie als relevant fu\u0308r die Klassifikation der Benutzer?    Fu\u0308gen Sie diese  Kriterien  der Liste hinzu.    Stereotypbeschreibung :    Fertigen Sie fu\u0308r  eine  dieser Personen eine anschaulische und lebendige  Stereotypbeschreibung  mit fiktivem oder echtem Namen, Bild, Alter, Geschlecht, Ausbildung, Vorlieben, Hobbys, Charaktereigenschaften etc. Anhand dieser Stereotypbeschreibung und des darauf aufbauenden  Anwendungsszenarios  sollen Sie sich spa\u0308ter immer wieder vergewissern ko\u0308nnen, ob die entworfene Fernbedienung auch wirklich zu diesen Personen passt.", 
            "title": "Personas"
        }, 
        {
            "location": "/termin2/#interview", 
            "text": "Interviewleitfaden : Erarbeiten Sie innerhalb ihres Teams einen  Interviewleitfaden , d.h., \u00fcberlegen Sie sich, welche Fragen Sie im Rahmen des Interviews ihren Stakeholdern stellen, um mehr \u00fcber ihre Fernsehgewohnheiten, W\u00fcnsche und Erwartungen zu erfahren. Notieren Sie diese in Form eines  teilstandardisierten Interviews .   Das Interview dient als Grundlage der Erstellung von   1 Anwendungsszenario  ( optional ) je 1 funktionale und qualitative Anforderung (inkl. Quantifizierung)  ( optional ) 1 Begeisterungsfaktor    Note  Hinweis:  Stellen Sie nicht irgendwelche Fragen; die Fragen sollen Ihnen helfen, die NutzerInnen und deren spezifische Bed\u00fcrfnisse, Lebensgewohnheiten und W\u00fcnsche besser zu verstehen. Die Antworten sind Basis f\u00fcr die Erarbeitung eines Anwendungsszenarios, sowie je einer funktionalen und qualitativen Anforderung (inkl. Quantifizierung) und einem Begeisterungsfaktor.     Ablauf und Aufgaben :   Gruppe 2 liest die  Stereotypbeschreibung  aus Aufgabe 1 von Gruppe 1 und steigt in diese Rolle  Gruppe 1 bereit das  teilstandardisierte Interview  vor (   siehe Vorlesungsunterlagen )   Gruppe 1  interviewed  Gruppe 2 und notiert sich die wichtigsten Angaben inkl. Fragen (    Beantwortung am Ende );    Gruppe 1 legt vorab fest, wer in die Rolle des  Moderators  tritt und wer  protokolliert  (   sie k\u00f6nnen nicht beides gleichzeitig tun! )   Nutzen Sie ggf. das Handy f\u00fcr Video-/Audioaufzeichnungen     Gruppe 1   2 leiten aus den Angaben gemeinsam ein  Anwendungsszenario  ab; Gruppe 1 notiert dieses.    ( optional ) Gruppe 1 leitet aus dem Anwendungszenario je  1 funktionale + 1 qualitative Anforderung  ab  ( optional ) Gruppe 1 stimmt die  Quantifizierbarkeit  der qualitativen Anforderung mit Gruppe 2 ab  ( optional ) Gruppe 1 erarbeitet mit Gruppe 2  einen Begeisterungsfaktor  dann Wechsel der Rollen    Hinweise:   Note  Anwendungsszenario : Dieses soll  lebensnah  und  anschaulich  sein und sich nicht in Details verlieren. Beziehen Sie sich nicht auf Kno\u0308pfe und deren Beschriftung (die sind ja noch gar nicht erfunden), sondern bleiben Sie auf der Ebene des mentalen Modells (dabei kann die Ich-Form helfen).    Note  Qualit\u00e4tskriterien:  Achten Sie auf eine  korrekte Formulierung  und u\u0308berpru\u0308fen Sie auch, ob alle  Qualita\u0308tskriterien  hinreichend erfu\u0308llt werden. U\u0308berlegen Sie hierbei, wie die Einhaltung eines Qualita\u0308tskriteriums nachgewiesen werden kann. Verfeinern Sie die Anforderung falls ein Qualita\u0308tskriterium u\u0308berhaupt nicht eingehalten wird.    Note  Formulierung:  In der Vorlesung haben Sie ein  Tool  zur angemessen  Formulierung von Anforderungen  kennen gelernt; wie hei\u00dft dieses? \u00dcberlegen Sie auch, warum man dieses einsetzen sollte.    Note  Quantifizierung:  U\u0308berpru\u0308fen Sie die Quantifizierbarkeit der beiden  Qualita\u0308tsanforderungen  und stellen Sie entsprechende  Quantifizierungsmerkmale  auf ( Hinweis: hier k\u00f6nnen Sie sich an den Beispielen aus der Vorlesung bzw. aus dem Skriptum orientieren );", 
            "title": "Interview"
        }, 
        {
            "location": "/termin2/#ergebnisse", 
            "text": "Die folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:   Abstract  Ergebnisse:    je 1 Benutzer- und 1 Kriterienliste   dokumentierter Interviewleitfaden inkl. Antworten   1 Stereotypbeschreibung   1 Anwendungsszenariobeschreibung   ( optional ) je 1 funktionale und 1 qualitative Anforderung pro Szenario   ( optional ) Quantifizierung der qualitativen Anforderungen   ( optional ) je 1 Begeisterungsfaktor pro Szenario", 
            "title": "Ergebnisse"
        }, 
        {
            "location": "/termin3/", 
            "text": "Entwurf\n\n\n\n\nAbstract\n\n\nLernziele\n\n\n\n\n Sie ko\u0308nnen eine Benutzungsschnittstelle mit geeigneten Diagrammen beschreiben\n\n\n Sie ko\u0308nnen Papier-Prototypen erstellen\n\n\n Sie ko\u0308nnen die UI Prototypen testen und Verbesserungen identifizieren\n\n\n Sie verstehen das Vorgehensmodell zum Entwurf einer Benutzungsschnittstelle im Kontext von OOAD/SWE\n\n\n\n\n\n\n\n\nWarning\n\n\nHinweis:\n Die Fernbedienung muss mindestens die im Kapitel Vorbemerkung aufgez\u00e4hlten Funktionen beinhalten.\n\n\n\n\nAufgaben\n\n\nUI Entwurf (Paper Prototyping)\n\n\n\n\n\n\nEntwerfen Sie die \nBenutzungsoberfla\u0308che\n der neuen Fernbedienung in Form von konkreten  Screen-Diagrammen als \nPapier-Prototypen\n (\nbitte gro\u00df und gut erkennbar!\n). \n\n\nHinweise:\n\n\n\n\nAchten Sie auf Vollsta\u0308ndigkeit der beno\u0308tigten Bedienelemente. \n\n\nBeru\u0308cksichtigen Sie Platzierung, Gro\u0308\u00dfe, Anordnung, Beschriftung. \n\n\nSkizzieren Sie von \nIcons\n die Rohform so, dass man deren bildlich-inhaltliche Aussage versteht.\n\n\nNutzen Sie \nabstrakte Screen-Diagramme\n um \nEntwurfsalternativen\n zu erkennen, die Sie wiederum konkret skizzieren. Wa\u0308hlen Sie die \nbeste Entwurfsalternative\n aus und verfolgen Sie diese weiter.\n\n\n\n\n\n\n\n\nAnalyseklasse\n\n\n\n\nEntwerfen Sie parallel zu den abstrakten / konkreten Screen-Diagrammen \neine(!) Analyseklasse\n, in die Sie die Hauptfunktionen der Benutzungsoberfl\u00e4che als Methoden eintragen.\n\n\n\n\nNutzen Sie die Analyseklasse um auf \nVollst\u00e4ndigkeit\n hinsichtlich der verwendeten \nUI-Elemente\n, als auch auf Vollst\u00e4dnigkeit hinsichtlich der eingetragenen \nMethoden\n zu pr\u00fcfen.\n\n\n\n\nNote\n\n\nHinweis:\n Auch wenn \nMembervariablen\n per Default nicht eingetragen werden m\u00fcssen, so sollten Sie dies tun und diese dann als Grundlage f\u00fcr den Entwurf des \nDatenmodells\n hernehmen.\n\n\n\n\n\n\n\n\n\n\n\nTesten\n\n\n\n\n\n\nTesten Sie Ihre Entwu\u0308rfe mit Ihren Stakeholdern (Ihrer Peer-Gruppe) und identifizieren Sie Ungereimtheiten und/oder Inkonsistenzen und Verbesserungen. U\u0308berlegen Sie, ob es gut und richtig ist, wenn Sie keine Verbesserungen identifizieren.\n\n\n\n\nNote\n\n\n\n\nDen Test k\u00f6nnen Sie auch zu Beginn der n\u00e4chsten Einheit durchf\u00fchren.\n\n\n\u00dcberlegen Sie im Vorfeld, wie Sie Ihre Entw\u00fcrfe sinnvoll testen (\n \nFunktion vs. Use Case\n)\n\n\n\n\n\n\n\n\n\n\nErgebnisse\n\n\nDie folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:\n\n\n\n\nAbstract\n\n\nErgebnisse:\n\n\n\n\n Paper Prototypes ihrer Applikation\n\n\n Analyseklasse\n\n\n Reflexion des User Tests (\n \nm\u00fcndlich\n)", 
            "title": "Termin 3: UI Entwurf"
        }, 
        {
            "location": "/termin3/#entwurf", 
            "text": "Abstract  Lernziele    Sie ko\u0308nnen eine Benutzungsschnittstelle mit geeigneten Diagrammen beschreiben   Sie ko\u0308nnen Papier-Prototypen erstellen   Sie ko\u0308nnen die UI Prototypen testen und Verbesserungen identifizieren   Sie verstehen das Vorgehensmodell zum Entwurf einer Benutzungsschnittstelle im Kontext von OOAD/SWE     Warning  Hinweis:  Die Fernbedienung muss mindestens die im Kapitel Vorbemerkung aufgez\u00e4hlten Funktionen beinhalten.", 
            "title": "Entwurf"
        }, 
        {
            "location": "/termin3/#aufgaben", 
            "text": "", 
            "title": "Aufgaben"
        }, 
        {
            "location": "/termin3/#ui-entwurf-paper-prototyping", 
            "text": "Entwerfen Sie die  Benutzungsoberfla\u0308che  der neuen Fernbedienung in Form von konkreten  Screen-Diagrammen als  Papier-Prototypen  ( bitte gro\u00df und gut erkennbar! ).   Hinweise:   Achten Sie auf Vollsta\u0308ndigkeit der beno\u0308tigten Bedienelemente.   Beru\u0308cksichtigen Sie Platzierung, Gro\u0308\u00dfe, Anordnung, Beschriftung.   Skizzieren Sie von  Icons  die Rohform so, dass man deren bildlich-inhaltliche Aussage versteht.  Nutzen Sie  abstrakte Screen-Diagramme  um  Entwurfsalternativen  zu erkennen, die Sie wiederum konkret skizzieren. Wa\u0308hlen Sie die  beste Entwurfsalternative  aus und verfolgen Sie diese weiter.", 
            "title": "UI Entwurf (Paper Prototyping)"
        }, 
        {
            "location": "/termin3/#analyseklasse", 
            "text": "Entwerfen Sie parallel zu den abstrakten / konkreten Screen-Diagrammen  eine(!) Analyseklasse , in die Sie die Hauptfunktionen der Benutzungsoberfl\u00e4che als Methoden eintragen.   Nutzen Sie die Analyseklasse um auf  Vollst\u00e4ndigkeit  hinsichtlich der verwendeten  UI-Elemente , als auch auf Vollst\u00e4dnigkeit hinsichtlich der eingetragenen  Methoden  zu pr\u00fcfen.   Note  Hinweis:  Auch wenn  Membervariablen  per Default nicht eingetragen werden m\u00fcssen, so sollten Sie dies tun und diese dann als Grundlage f\u00fcr den Entwurf des  Datenmodells  hernehmen.", 
            "title": "Analyseklasse"
        }, 
        {
            "location": "/termin3/#testen", 
            "text": "Testen Sie Ihre Entwu\u0308rfe mit Ihren Stakeholdern (Ihrer Peer-Gruppe) und identifizieren Sie Ungereimtheiten und/oder Inkonsistenzen und Verbesserungen. U\u0308berlegen Sie, ob es gut und richtig ist, wenn Sie keine Verbesserungen identifizieren.   Note   Den Test k\u00f6nnen Sie auch zu Beginn der n\u00e4chsten Einheit durchf\u00fchren.  \u00dcberlegen Sie im Vorfeld, wie Sie Ihre Entw\u00fcrfe sinnvoll testen (   Funktion vs. Use Case )", 
            "title": "Testen"
        }, 
        {
            "location": "/termin3/#ergebnisse", 
            "text": "Die folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:   Abstract  Ergebnisse:    Paper Prototypes ihrer Applikation   Analyseklasse   Reflexion des User Tests (   m\u00fcndlich )", 
            "title": "Ergebnisse"
        }, 
        {
            "location": "/termin4/", 
            "text": "Implementierung der Benutzungsoberfla\u0308che\n\n\n\n\nAbstract\n\n\nLernziele\n\n\n\n\n Sie ko\u0308nnen eine Android App mit einer Layoutvariante implementieren\n\n\n Sie verstehen das Zusammenspiel verschiedener Activities u\u0308ber Intents\n\n\n Sie verstehen das Konzept der Ereignisorientierung\n\n\n Sie haben einen ersten Eindruck von XML\n\n\n\n\n\n\nAufgaben\n\n\nLayouts und Navigation\n\n\nLegen Sie das Fernbedienungs-Projekt an und generieren Sie alle Activities der Anwendung\n\n\n\n\nImplementieren Sie die zugeho\u0308rigen \nLayouts\n in der \nDesign-Ansicht\n von Android Studio; bestu\u0308cken Sie die\nLayouts mit den beno\u0308tigten Views und Widgets. Testen Sie das Layout f\u00fcr unterschiedliche \nDisplaygro\u0308\u00dfen\n und \nDisplayauflo\u0308sungen\n und passen Sie es ggf. an.\n\n\nSchalten Sie um in die Text-Ansicht der Layouts, versuchen Sie das generierte \nXML\n zu verstehen und ra\u0308umen Sie in der Text-Ansicht ggf. etwas auf\n\n\nVerknu\u0308pfen Sie die Activities indem Sie die \nNavigation\n (d.h. die Umschaltung zwischen Screens) implementieren\n\n\nOptimieren\n Sie ihren Entwurf hinsichtlich \nGro\u0308\u00dfe\n, \nPlatzierung\n und \nBeschriftung\n der Views und Widgets\n\n\n\n\nTV-Server\n\n\nDer \"Fernseher\" wird u\u0308ber das \nHTTP-Protokoll\n gesteuert, u\u0308ber das man normalerweise Webseiten aufruft (na\u0308heres dazu in \u201eEntwicklung webbasierter Anwendungen\u201c im 4. Semester). Die Fernbedienung ist der Client (Browser) und der Fernseher ist der Server. \n\n\nSie ko\u0308nnen den \"Fernseher\" provisorisch steuern:\n\n\n\n\nStarten Sie den \u201eFernseher\u201c durch Doppelklick auf die gegebene Datei \nTV.jar\n\n\nNotieren Sie die angezeigte IP-Adresse\n\n\nLaden Sie die gegebene Datei \nTestTVInterface.htm\n herunter und rufen Sie sie lokal im Browser auf\n\n\nMachen Sie sich mit dem Befehlssatz vertraut\n\n\nSchauen Sie sich die Antwort auf den Befehl \nscanChannels\n genau an (ist JSON Format, wird noch erkla\u0308rt)\n\n\n\n\nKommunikation mit dem TV-Server\n\n\nWenn Sie spa\u0308ter die Fernbedienung auf dem Smartphone oder im Emulator testen wollen, mu\u0308ssen Sie dort die IP-Adresse verwenden, die der Fernseher beim Start anzeigt (\n127.0.0.1\n ist der \nlocalhost\n und funktioniert nur, wenn Client und Server auf demselben PC laufen).\n\n\nDas HTTP-Protokoll brauchen Sie fu\u0308r dieses Praktikum nicht weiter zu verstehen:\n\n\n\n\nBinden Sie die gegebene Klasse \nHttpRequest.java\n in Ihr Projekt ein (passen Sie ggf. das package an)\n\n\nLesen und verstehen Sie die Dokumentation zur Klasse und ihren Methoden im Quellcode (Javadoc-Stil)\n\n\nSteuern Sie den \u201eFernseher\u201c durch Aufruf der Methode \nHttpRequest.execute\n mit geeigneten Parametern\n\n\n\n\nErgebnisse\n\n\nDie folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:\n\n\n\n\nAbstract\n\n\nErgebnisse:\n\n\n\n\n Fertiges Layout\n\n\n Implementierung der Navigation\n\n\n Einbinden der \nHttpRequest.java\n Klasse", 
            "title": "Termin 4: Layout"
        }, 
        {
            "location": "/termin4/#implementierung-der-benutzungsoberflache", 
            "text": "Abstract  Lernziele    Sie ko\u0308nnen eine Android App mit einer Layoutvariante implementieren   Sie verstehen das Zusammenspiel verschiedener Activities u\u0308ber Intents   Sie verstehen das Konzept der Ereignisorientierung   Sie haben einen ersten Eindruck von XML", 
            "title": "Implementierung der Benutzungsoberfla\u0308che"
        }, 
        {
            "location": "/termin4/#aufgaben", 
            "text": "", 
            "title": "Aufgaben"
        }, 
        {
            "location": "/termin4/#layouts-und-navigation", 
            "text": "Legen Sie das Fernbedienungs-Projekt an und generieren Sie alle Activities der Anwendung   Implementieren Sie die zugeho\u0308rigen  Layouts  in der  Design-Ansicht  von Android Studio; bestu\u0308cken Sie die\nLayouts mit den beno\u0308tigten Views und Widgets. Testen Sie das Layout f\u00fcr unterschiedliche  Displaygro\u0308\u00dfen  und  Displayauflo\u0308sungen  und passen Sie es ggf. an.  Schalten Sie um in die Text-Ansicht der Layouts, versuchen Sie das generierte  XML  zu verstehen und ra\u0308umen Sie in der Text-Ansicht ggf. etwas auf  Verknu\u0308pfen Sie die Activities indem Sie die  Navigation  (d.h. die Umschaltung zwischen Screens) implementieren  Optimieren  Sie ihren Entwurf hinsichtlich  Gro\u0308\u00dfe ,  Platzierung  und  Beschriftung  der Views und Widgets", 
            "title": "Layouts und Navigation"
        }, 
        {
            "location": "/termin4/#tv-server", 
            "text": "Der \"Fernseher\" wird u\u0308ber das  HTTP-Protokoll  gesteuert, u\u0308ber das man normalerweise Webseiten aufruft (na\u0308heres dazu in \u201eEntwicklung webbasierter Anwendungen\u201c im 4. Semester). Die Fernbedienung ist der Client (Browser) und der Fernseher ist der Server.   Sie ko\u0308nnen den \"Fernseher\" provisorisch steuern:   Starten Sie den \u201eFernseher\u201c durch Doppelklick auf die gegebene Datei  TV.jar  Notieren Sie die angezeigte IP-Adresse  Laden Sie die gegebene Datei  TestTVInterface.htm  herunter und rufen Sie sie lokal im Browser auf  Machen Sie sich mit dem Befehlssatz vertraut  Schauen Sie sich die Antwort auf den Befehl  scanChannels  genau an (ist JSON Format, wird noch erkla\u0308rt)", 
            "title": "TV-Server"
        }, 
        {
            "location": "/termin4/#kommunikation-mit-dem-tv-server", 
            "text": "Wenn Sie spa\u0308ter die Fernbedienung auf dem Smartphone oder im Emulator testen wollen, mu\u0308ssen Sie dort die IP-Adresse verwenden, die der Fernseher beim Start anzeigt ( 127.0.0.1  ist der  localhost  und funktioniert nur, wenn Client und Server auf demselben PC laufen).  Das HTTP-Protokoll brauchen Sie fu\u0308r dieses Praktikum nicht weiter zu verstehen:   Binden Sie die gegebene Klasse  HttpRequest.java  in Ihr Projekt ein (passen Sie ggf. das package an)  Lesen und verstehen Sie die Dokumentation zur Klasse und ihren Methoden im Quellcode (Javadoc-Stil)  Steuern Sie den \u201eFernseher\u201c durch Aufruf der Methode  HttpRequest.execute  mit geeigneten Parametern", 
            "title": "Kommunikation mit dem TV-Server"
        }, 
        {
            "location": "/termin4/#ergebnisse", 
            "text": "Die folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:   Abstract  Ergebnisse:    Fertiges Layout   Implementierung der Navigation   Einbinden der  HttpRequest.java  Klasse", 
            "title": "Ergebnisse"
        }, 
        {
            "location": "/termin5/", 
            "text": "Vervollsta\u0308ndigung der Implementierung\n\n\n\n\nAbstract\n\n\nLernziele\n\n\n\n\n Sie verstehen die Architektur einer App mit Datenmodell und Zugriff auf einen Server\n\n\n Sie verstehen die Realisierung von Dateizugriff und Serialisierung in Java\n\n\n Sie verstehen den Sinn der Aufteilung in UI Thread und Worker Threads bei GUI Systemen\n\n\n Sie ko\u0308nnen mit JSON Objekten und Java Collections umgehen\n\n\n Sie verstehen den Lebenszyklus von Activities und die Problematik des Instance State\n\n\n\n\n\n\nAufgaben\n\n\nDatenmodell\n\n\n\n\nImplementieren Sie das in \nAufgabe 1\n dargelegte \nDatenmodell\n und binden Sie es in die App ein\n\n\n\n\nMachen Sie das Datenmodell \npersistent\n, indem Sie es in \nonPause\n jeder relevanten Activity serialisiert in einer Datei speichern und beim \nonCreate\n aus dieser Datei einlesen und deserialisieren\n\n\n\n\nQuestion\n\n\nFrage:\n Erzeugen Sie dabei ein neues Model-Objekt oder fu\u0308llen Sie lieber das alte mit neuen Inhalten? Mu\u0308ssen/du\u0308rfen Activities eigene Referenzen auf das Datenmodell halten?\n\n\n\n\n\n\n\n\nBenutzeroberfl\u00e4che\n\n\n\n\nImplementieren Sie Benutzerfu\u0308hrung durch \nZeigen/Verbergen\n bzw. \nAktivieren/Deaktivieren\n von Views und Widgets\n\n\nGeben Sie \n(Fehler-)Meldungen\n in geeigneter Form als \nAlertDialog\n, \nToast\n, \nSnackbar\n oder via Log aus (was wofu\u0308r?)\n\n\nU\u0308bernehmen Sie das Ergebnis des \nKanalscans\n aus dem JSON-Ergebnis von \nHttpRequest.execute\n und\nspeichern Sie es im \nDatenmodell\n. Binden Sie die betroffenen Views u\u0308ber Adapter an die Kanalliste an.\n\n\nMachen Sie Ihre App \"\ndrehbar\n\", d.h. sorgen Sie dafu\u0308r, dass der Neustart der Activity beim Drehen des Smartphones (Hochformat/Querformat) keine sichtbaren Folgen hat. Implementieren Sie dazu ggf. die Methode \nonSaveInstanceState\n und werten Sie dann den Parameter von \nonCreate\n entsprechend aus.\n\n\n\n\nAsyncTask\n\n\nEigentlich sollten Zugriffe aufs Netzwerk nicht im UI Thread gemacht werden (warum?). \n\n\n\n\nSchreiben Sie daher eine Klasse \nHttpRequestAsync extends AsyncTask\n und verlagern Sie die \nHttpRequest\n-Aufrufe in deren Methode \ndoInBackground\n.\n\n\n\n\nTesten, Debuggen, komplett Fertigstellen\n\n\n\n\nVergewissern Sie sich, dass alle in Aufgabe 2 geplanten Use Cases und Anwendungsszenarien von Ihrer Anwendung tatsa\u0308chlich unterstu\u0308tzt werden. Testen Sie auch das Verhalten bei Erstinbetriebnahme (d.h. der persistente Speicher ist leer: Einstellungen, Apps, Fernbedienung, Daten lo\u0308schen)\n\n\n\n\nErgebnisse\n\n\nDie folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:\n\n\n\n\nAbstract\n\n\nErgebnisse:\n\n\n\n\n Persistiertes Datenmodell\n\n\n Layout f\u00fcr Hoch- und Querformat\n\n\n Umsetzung der im \nKapitel Vorbemerkung\n genannten Funktionen", 
            "title": "Termin 5: Logik"
        }, 
        {
            "location": "/termin5/#vervollstandigung-der-implementierung", 
            "text": "Abstract  Lernziele    Sie verstehen die Architektur einer App mit Datenmodell und Zugriff auf einen Server   Sie verstehen die Realisierung von Dateizugriff und Serialisierung in Java   Sie verstehen den Sinn der Aufteilung in UI Thread und Worker Threads bei GUI Systemen   Sie ko\u0308nnen mit JSON Objekten und Java Collections umgehen   Sie verstehen den Lebenszyklus von Activities und die Problematik des Instance State", 
            "title": "Vervollsta\u0308ndigung der Implementierung"
        }, 
        {
            "location": "/termin5/#aufgaben", 
            "text": "", 
            "title": "Aufgaben"
        }, 
        {
            "location": "/termin5/#datenmodell", 
            "text": "Implementieren Sie das in  Aufgabe 1  dargelegte  Datenmodell  und binden Sie es in die App ein   Machen Sie das Datenmodell  persistent , indem Sie es in  onPause  jeder relevanten Activity serialisiert in einer Datei speichern und beim  onCreate  aus dieser Datei einlesen und deserialisieren   Question  Frage:  Erzeugen Sie dabei ein neues Model-Objekt oder fu\u0308llen Sie lieber das alte mit neuen Inhalten? Mu\u0308ssen/du\u0308rfen Activities eigene Referenzen auf das Datenmodell halten?", 
            "title": "Datenmodell"
        }, 
        {
            "location": "/termin5/#benutzeroberflache", 
            "text": "Implementieren Sie Benutzerfu\u0308hrung durch  Zeigen/Verbergen  bzw.  Aktivieren/Deaktivieren  von Views und Widgets  Geben Sie  (Fehler-)Meldungen  in geeigneter Form als  AlertDialog ,  Toast ,  Snackbar  oder via Log aus (was wofu\u0308r?)  U\u0308bernehmen Sie das Ergebnis des  Kanalscans  aus dem JSON-Ergebnis von  HttpRequest.execute  und\nspeichern Sie es im  Datenmodell . Binden Sie die betroffenen Views u\u0308ber Adapter an die Kanalliste an.  Machen Sie Ihre App \" drehbar \", d.h. sorgen Sie dafu\u0308r, dass der Neustart der Activity beim Drehen des Smartphones (Hochformat/Querformat) keine sichtbaren Folgen hat. Implementieren Sie dazu ggf. die Methode  onSaveInstanceState  und werten Sie dann den Parameter von  onCreate  entsprechend aus.", 
            "title": "Benutzeroberfl\u00e4che"
        }, 
        {
            "location": "/termin5/#asynctask", 
            "text": "Eigentlich sollten Zugriffe aufs Netzwerk nicht im UI Thread gemacht werden (warum?).    Schreiben Sie daher eine Klasse  HttpRequestAsync extends AsyncTask  und verlagern Sie die  HttpRequest -Aufrufe in deren Methode  doInBackground .", 
            "title": "AsyncTask"
        }, 
        {
            "location": "/termin5/#testen-debuggen-komplett-fertigstellen", 
            "text": "Vergewissern Sie sich, dass alle in Aufgabe 2 geplanten Use Cases und Anwendungsszenarien von Ihrer Anwendung tatsa\u0308chlich unterstu\u0308tzt werden. Testen Sie auch das Verhalten bei Erstinbetriebnahme (d.h. der persistente Speicher ist leer: Einstellungen, Apps, Fernbedienung, Daten lo\u0308schen)", 
            "title": "Testen, Debuggen, komplett Fertigstellen"
        }, 
        {
            "location": "/termin5/#ergebnisse", 
            "text": "Die folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:   Abstract  Ergebnisse:    Persistiertes Datenmodell   Layout f\u00fcr Hoch- und Querformat   Umsetzung der im  Kapitel Vorbemerkung  genannten Funktionen", 
            "title": "Ergebnisse"
        }, 
        {
            "location": "/termin6/", 
            "text": "Usability Test und Inspection\n\n\n\n\nWarning\n\n\nHinweis:\n Keine Restarbeiten mehr an der Implementierung!\n\n\n\n\n\n\nAbstract\n\n\nLernziele\n\n\n\n\n Sie ko\u0308nnen einen Usability Test als Moderator und Beobachter durchfu\u0308hren\n\n\n Sie ko\u0308nnen Sich auf das Beobachten beschra\u0308nken und widerstehen der Versuchung Test-Benutzer zu schulen\n\n\n Sie ko\u0308nnen Usability Probleme anhand von kleinsten Anzeichen des Test-Benutzers erkennen\n\n\n Sie ko\u0308nnen Usability Probleme pra\u0308zise benennen und dokumentieren\n\n\n\n\n\n\nVorbereitung\n\n\n\n\nWarning\n\n\nZu Hause:\n Bereiten Sie die Testprotokolle vor anhand der folgenden Test-Aufgaben und der vorgegebenen Checklisten, d.h. betrachten Sie die Checklisten als \u201eRohmaterial\u201c und machen Sie daraus Protokollformulare.\n\n\n\n\n\n\nNote\n\n\nHinweis:\n Die Testprotokolle sollen den Entwicklern bei der weiteren Verbesserung helfen (keine Angst, das mu\u0308ssen Sie im Praktikum nicht mehr umsetzen ;-). Benennen Sie Schwachpunkte mo\u0308glichst konkret; pauschale \u201eSchulnoten\u201c helfen nicht weiter.\n\n\n\n\nAlle Protokolle aus den folgenden Teilaufgaben kommen in die Projektmappe.\n\n\nAufgaben\n\n\nUsability Test\n\n\nZum \nUsability Test\n tun Sie sich mit Ihrer Peer-Gruppe zusammen:\n\n\n\n\nfu\u0308r die App Ihrer Nachbarn sind Sie Test-Benutzer und arbeiten die Test-Aufgaben ab\n\n\nfu\u0308r Ihre eigene App sind Sie Test-Moderator (der/die eine) und Test-Beobachter (der/die andere)\n\n\n\n\nThinking aloud\n\n\n\n\nDer Test-Benutzer arbeitet die \nTest-Aufgaben\n (vgl. Anwendungsszenarios und Anforderungen) ab. Der Test-Moderator gibt \nkeine Erkla\u0308rung\n und \nkeine Hilfestellung\n und ermuntert den Test-Benutzer lediglich zum \u201e\nlauten Denken\n\u201c. Der Test-Beobachter protokolliert.\n\n\n\n\nInterview\n\n\n\n\nDirekt anschlie\u00dfend \ninterviewen\n Test-Moderator und Test-Beobachter den Test-Benutzer um eventuelle \noffene Fragen\n zu kla\u0308ren. Der Test-Beobachter protokolliert.\n\n\n\n\nUsability Inspection\n\n\nWenden Sie die \u201e\nCheckliste zur Usability Inspection\n\u201c auf die Fernbedienung Ihrer Peer-Gruppe an. U\u0308bertragen Sie die allgemeinen Regeln sinnvoll auf die Fernbedienung. Protokollieren Sie eventuelle Probleme und Defizite so, dass die Entwickler verstehen, inwiefern die App verbessert werden sollte.\n\n\nDesign Review\n\n\nBewerten Sie die Fernbedienung Ihrer Nachbargruppe unter Design Aspekten:\n\n\n\n\nSchrift gut lesbar?\n\n\nIcons gut erkennbar und Funktion versta\u0308ndlich?\n\n\nFarbgebung\n\n\nGro\u0308\u00dfe der Bedienelemente\n\n\nSinnvolle Gruppierung der Bedienelemente?\n\n\nAbsta\u0308nde und Ra\u0308nder\n\n\nSinnvolles Verhalten beim Drehen des Smartphones (keine Zustandsa\u0308nderung, kein Abbruch von Abla\u0308ufen)\n\n\n\n\nErgebnisse\n\n\nDie folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:\n\n\n\n\nAbstract\n\n\nErgebnisse:\n\n\nVorbereitete und ausgef\u00fcllte Protokolle f\u00fcr...\n\n\n\n\n Thinking aloud Test und anschl. Interview\n\n\n Usability Inspection\n\n\n Design Review\n\n\n Liste mit Verbesserungen (\n \nabgeleitet aus den unterschiedlichen Protokollen\n)\n\n\n\n\nOhne Testprotokolle kein Testat!", 
            "title": "Termin 6: Usability"
        }, 
        {
            "location": "/termin6/#usability-test-und-inspection", 
            "text": "Warning  Hinweis:  Keine Restarbeiten mehr an der Implementierung!    Abstract  Lernziele    Sie ko\u0308nnen einen Usability Test als Moderator und Beobachter durchfu\u0308hren   Sie ko\u0308nnen Sich auf das Beobachten beschra\u0308nken und widerstehen der Versuchung Test-Benutzer zu schulen   Sie ko\u0308nnen Usability Probleme anhand von kleinsten Anzeichen des Test-Benutzers erkennen   Sie ko\u0308nnen Usability Probleme pra\u0308zise benennen und dokumentieren", 
            "title": "Usability Test und Inspection"
        }, 
        {
            "location": "/termin6/#vorbereitung", 
            "text": "Warning  Zu Hause:  Bereiten Sie die Testprotokolle vor anhand der folgenden Test-Aufgaben und der vorgegebenen Checklisten, d.h. betrachten Sie die Checklisten als \u201eRohmaterial\u201c und machen Sie daraus Protokollformulare.    Note  Hinweis:  Die Testprotokolle sollen den Entwicklern bei der weiteren Verbesserung helfen (keine Angst, das mu\u0308ssen Sie im Praktikum nicht mehr umsetzen ;-). Benennen Sie Schwachpunkte mo\u0308glichst konkret; pauschale \u201eSchulnoten\u201c helfen nicht weiter.   Alle Protokolle aus den folgenden Teilaufgaben kommen in die Projektmappe.", 
            "title": "Vorbereitung"
        }, 
        {
            "location": "/termin6/#aufgaben", 
            "text": "", 
            "title": "Aufgaben"
        }, 
        {
            "location": "/termin6/#usability-test", 
            "text": "Zum  Usability Test  tun Sie sich mit Ihrer Peer-Gruppe zusammen:   fu\u0308r die App Ihrer Nachbarn sind Sie Test-Benutzer und arbeiten die Test-Aufgaben ab  fu\u0308r Ihre eigene App sind Sie Test-Moderator (der/die eine) und Test-Beobachter (der/die andere)", 
            "title": "Usability Test"
        }, 
        {
            "location": "/termin6/#thinking-aloud", 
            "text": "Der Test-Benutzer arbeitet die  Test-Aufgaben  (vgl. Anwendungsszenarios und Anforderungen) ab. Der Test-Moderator gibt  keine Erkla\u0308rung  und  keine Hilfestellung  und ermuntert den Test-Benutzer lediglich zum \u201e lauten Denken \u201c. Der Test-Beobachter protokolliert.", 
            "title": "Thinking aloud"
        }, 
        {
            "location": "/termin6/#interview", 
            "text": "Direkt anschlie\u00dfend  interviewen  Test-Moderator und Test-Beobachter den Test-Benutzer um eventuelle  offene Fragen  zu kla\u0308ren. Der Test-Beobachter protokolliert.", 
            "title": "Interview"
        }, 
        {
            "location": "/termin6/#usability-inspection", 
            "text": "Wenden Sie die \u201e Checkliste zur Usability Inspection \u201c auf die Fernbedienung Ihrer Peer-Gruppe an. U\u0308bertragen Sie die allgemeinen Regeln sinnvoll auf die Fernbedienung. Protokollieren Sie eventuelle Probleme und Defizite so, dass die Entwickler verstehen, inwiefern die App verbessert werden sollte.", 
            "title": "Usability Inspection"
        }, 
        {
            "location": "/termin6/#design-review", 
            "text": "Bewerten Sie die Fernbedienung Ihrer Nachbargruppe unter Design Aspekten:   Schrift gut lesbar?  Icons gut erkennbar und Funktion versta\u0308ndlich?  Farbgebung  Gro\u0308\u00dfe der Bedienelemente  Sinnvolle Gruppierung der Bedienelemente?  Absta\u0308nde und Ra\u0308nder  Sinnvolles Verhalten beim Drehen des Smartphones (keine Zustandsa\u0308nderung, kein Abbruch von Abla\u0308ufen)", 
            "title": "Design Review"
        }, 
        {
            "location": "/termin6/#ergebnisse", 
            "text": "Die folgenden Ergebnisse m\u00fcssen f\u00fcr eine erfolgreiche Testierung der Praktikumseinheit vorliegen:   Abstract  Ergebnisse:  Vorbereitete und ausgef\u00fcllte Protokolle f\u00fcr...    Thinking aloud Test und anschl. Interview   Usability Inspection   Design Review   Liste mit Verbesserungen (   abgeleitet aus den unterschiedlichen Protokollen )   Ohne Testprotokolle kein Testat!", 
            "title": "Ergebnisse"
        }
    ]
}